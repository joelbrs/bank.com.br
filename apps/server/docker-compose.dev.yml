version: '3.8'
services:
  mongo: 
    image: mongo
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      retries: 5
    volumes:
      - "mongodb_data:/data/db"
      - "mongodb_config:/data/configdb"
  redis:
    image: redis:7.2.5-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    depends_on:
      - mongo
    volumes: 
      - redis:/data

volumes:
  mongodb_data:
  mongodb_config:
  redis:
    driver: local